sum(complete.cases(DDRS))
select(DDR, starts_with('S'))
select(DDR, ends_with('no'))
select(DDR, contains("tu"))
Letras <- c("a","b","c","d","e","f","g","h","i","j")
quantile(Letras, 0.25, type=3)
quantile(Letras, 0.5, type=3)
quantile(Letras, 0.75, type = 3)
quantile(Letras, probs=c(0.25,0.5,0.75,0.9), type=3)
Ncalc <- c(6,8,8,8,10,10,19,20,20)
Nestad <- c(9,10,10,12,13,13,13,14,14,14)
unique(DDRS$Signo)
unique(DDRS$Carrera)
a <-  filter(DDRS, Edad < 25, Signo == "tauro" | Signo == "Tauro")
table(a$Edad)
stem(log(a$Edad))
unique(DDRS$Polo)
a <- filter(DDRS, Polo %in% c("L","XL","XXL","l","xl","Xl"), Estatura>=175)
a
library(stringr)
#Sirve para modificar y controlar caracteres
Sexomin <- tolower(DDRS$Sexo)
unique(Sexomin)
Sexomax <- toupper(Sexomin)
DDRS$Sexo <- str_to_lower(DDRS$Sexo, locale = "es") #minuscula
unique(DDRS$Sexo)
DDRS$Sexo <- str_to_upper(DDRS$Sexo, locale = "es") #mayuscula
unique(DDRS$Sexo)
DDRS1 <- mutate(DDRS, Sexcor = case_when(Sexo == "" ~'no especifica', Sexo == "MM"~'M', Sexo == "NB"~"desconocido", Sexo == "M" ~ "M", Sexo == "F"~"F", Sexo=="L" ~ "desconocido"))
DDRS1
table(DDRS1$Sexcor)
table(DDRS1$Sexcor, useNA = "always")
frec <- c(2,554,1311, 3) # Frecuencias de sexo corregido
frec
pie(frec) # antihorario clockwise=F
frec = c(500,1000,400,80)
pie(frec, labels=frec, col= c("white","blue","yellow","green"))
legend("topleft", legend=c("Desconocido","Femenino","Masculino","no especifica"), fill = c("white","lightblue","mistyrose","lightgreen"))
library(plotrix)
pie3D(frec, labels=frec, col= c("white","lightblue","mistyrose","lightgreen"))
legend("topright", legend=c("Desconocido","Femenino","Masculino","no especifica"), fill = c("white","lightblue","mistyrose","lightgreen"), title=("SEXO"))
summary(DDRS1$Edad)
boxplot(DDRS1$Edad)
boxplot(DDRS1$Edad, col="lightblue", horizontal = TRUE)
boxplot(DDRS1$Edad,col = "lightblue", horizontal = TRUE, xlab="Edad en años")
stripchart(DDRS1$Edad, method = "jitter", pch=19, add = TRUE, col = "purple")
Fsexcor <- factor(DDRS1$Sexcor)
Fsexcor
plot(DDRS1$Edad) #aquila variable es cuantitiva y produce una nube de puntos
plot(Fsexcor)
tabsexo <- table(DDRS1$Sexcor)
barp<- barplot(tabsexo, main = "Gráfico de barras de Sexo", col = c("white","yellow","red"),xlab = "Sexo", ylab = "Frecuencia absoluta")
library(readr)
A <- c(2,4,4,4,7,8,8,8,8,8,10,10)
DD <- read.csv("Datos_Diversos.csv", encoding = "UTF-8")
mean(A)
median(A)
table(A)
summary(A)
summary(cars$dist)
table(cars$dist)
DD <- read.csv("Datos_Diversos.csv")
dim(DD)
nrow(DD)
ncol(DD)
library(plyr)
library(dplyr)
glimpse(DD)
class(DD$Estatura..cm.)
class(DD$Apellido)
DD$Ciclo <- as.character(DD$Ciclo)
DD$Edad <- as.numeric(DD$Edad)
DD$Estatura..cm. <- as.numeric(DD$Estatura..cm.)
DD$Peso..kg. <- as.numeric(DD$Peso..kg.)
DD$Tiempo.de.reacción <- as.numeric(DD$Tiempo.de.reacción)
DD$Talla.de.zapato <- as.numeric(DD$Talla.de.zapato)
glimpse(DD)
library(tidyr)
library(tidyverse)
str(DD)
summary(DD)
summary(DD$Edad)
quantile(cars$speed, 0.9) #Estoy hallando la mayor velocidad del 90% de las menores velocidades
quantile(cars$speed, 0.9, na.rm=F)
quantile(cars$speed, 0.9, na.rm=TRUE)
#Aqui en cars, da lo mismo poner T o F, pues Cars no tiene datos NA y nada se va a remover
quantile(DD$Edad, 0.5, T) #50% medido desde la izquierda: mediana = cuartil2. Con true se ignora los NA's
quantile(DD$Edad, 0.25, T) #25% medido desde la izquierda: Cuartil 1. Con True se ignora los NA's
quantile(DD$Edad, 0.8, T) #80% medido desde la izuiqerda.
table(DD$Edad)
table(DD$Período, DD$Ciclo)
DDR <- rename(DD, Estatura = 'Estatura..cm.', Peso = 'Peso..kg.', Signo = 'Signo.del.zodiaco',
Reacción = 'Tiempo.de.reacción', Videojuegos = 'Juega.videojuegos', Deporte = 'Hace.deporte',
Color = 'Color.favorito', Calzado = 'Talla.de.zapato', Polo = 'Talla.de.polo')
names(DDR)
DDRS <- select(DDR, Período:Indicaciones)
sum(complete.cases(DDRS))
select(DDR, starts_with('S'))
select(DDR, ends_with('no'))
select(DDR, contains("tu"))
Letras <- c("a","b","c","d","e","f","g","h","i","j")
quantile(Letras, 0.25, type=3)
quantile(Letras, 0.5, type=3)
quantile(Letras, 0.75, type = 3)
quantile(Letras, probs=c(0.25,0.5,0.75,0.9), type=3)
Ncalc <- c(6,8,8,8,10,10,19,20,20)
Nestad <- c(9,10,10,12,13,13,13,14,14,14)
unique(DDRS$Signo)
unique(DDRS$Carrera)
a <-  filter(DDRS, Edad < 25, Signo == "tauro" | Signo == "Tauro")
table(a$Edad)
stem(log(a$Edad))
unique(DDRS$Polo)
a <- filter(DDRS, Polo %in% c("L","XL","XXL","l","xl","Xl"), Estatura>=175)
a
library(stringr)
#Sirve para modificar y controlar caracteres
Sexomin <- tolower(DDRS$Sexo)
unique(Sexomin)
Sexomax <- toupper(Sexomin)
DDRS$Sexo <- str_to_lower(DDRS$Sexo, locale = "es") #minuscula
unique(DDRS$Sexo)
DDRS$Sexo <- str_to_upper(DDRS$Sexo, locale = "es") #mayuscula
unique(DDRS$Sexo)
DDRS1 <- mutate(DDRS, Sexcor = case_when(Sexo == "" ~'no especifica', Sexo == "MM"~'M', Sexo == "NB"~"desconocido", Sexo == "M" ~ "M", Sexo == "F"~"F", Sexo=="L" ~ "desconocido"))
DDRS1
table(DDRS1$Sexcor)
table(DDRS1$Sexcor, useNA = "always")
frec <- c(2,554,1311, 3) # Frecuencias de sexo corregido
frec
pie(frec) # antihorario clockwise=F
frec = c(500,1000,400,80)
pie(frec, labels=frec, col= c("white","blue","yellow","green"))
legend("topleft", legend=c("Desconocido","Femenino","Masculino","no especifica"), fill = c("white","lightblue","mistyrose","lightgreen"))
library(plotrix)
pie3D(frec, labels=frec, col= c("white","lightblue","mistyrose","lightgreen"))
legend("topright", legend=c("Desconocido","Femenino","Masculino","no especifica"), fill = c("white","lightblue","mistyrose","lightgreen"), title=("SEXO"))
summary(DDRS1$Edad)
boxplot(DDRS1$Edad)
boxplot(DDRS1$Edad, col="lightblue", horizontal = TRUE)
boxplot(DDRS1$Edad,col = "lightblue", horizontal = TRUE, xlab="Edad en años")
stripchart(DDRS1$Edad, method = "jitter", pch=19, add = TRUE, col = "purple")
Fsexcor <- factor(DDRS1$Sexcor)
Fsexcor
plot(DDRS1$Edad) #aquila variable es cuantitiva y produce una nube de puntos
plot(Fsexcor)
tabsexo <- table(DDRS1$Sexcor)
barp<- plot(Fsexcor, main = "Gráfico de barras de Sexo", col = c("white","yellow","red"),xlab = "Sexo", ylab = "Frecuencia absoluta", ylim = c(-100,1400))
text(barp, tabsexo=0.5, labels = tabsexo)
grid(nx  =NA, ny = NA,lwd = 1, lty = 1, col = "grey")
hist(DDRS1$Peso)
boxplot(DDRS1$Peso, horizontal = TRUE)
EstaturasReales <- filter(DDRS1, Estatura >= 100 & Estatura <= 210)
EstaturasReales
hist(EstaturasReales$Estatura)
hi <-hist(EstaturasReales$Estatura, xlab = "Estaturas de alumnos", ylab = "Frecuencia absoluta", col="lightblue",border="purple", main = "Histograma de Estaturas bien escritas de alumnos UTEC", breaks=40)
text(hi$mids,hi$counts,labels=hi$counts,adj=c(0.5,-0.5),cex=.5)
DDRS2 <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
DDRS2
summary(DDRS2$Estcor)
hist(DDRS2$Estcor)
hi <-hist(DDRS2$Estcor, xlab = "Estaturas de alumnos", ylab = "Frecuencia absoluta", col="lightblue",border="purple", main = "Histograma de Estaturas bien escritas de alumnos UTEC", breaks=20)
text(hi$mids,hi$counts,labels=hi$counts,adj=c(0.5,-0.5),cex=.5)
tabsexoyciclo<- table(DDRS2$Sexcor, DDRS2$Ciclo)
tabsexoyciclo
barplot(tabsexoyciclo, main= "Barras apiladas de sexo y ciclo", col = c("red","green","yellow"))
legend(x="topright", legend = c("Desconocido", "Femenino", "Masculino"))
barplot(tabsexoyciclo, main= "Barras apiladas de sexo y ciclo", col = c("red","green","yellow"))
legend(x="topright", legend = c("Desconocido", "Femenino", "Masculino"), fill = c("red","green","yellow", title = "leyenda"))
boxplot(formula=DDRS2$Edad~DDRS2$Sexcor, data = DDRS2, col=c("lightgreen","lightblue"))
boxplot(formula=DDRS2$Edad~DDRS2$Sexcor, data = DDRS2, col=c("lightgreen","lightblue"), horizontal=TRUE)
boxplot(formula=DDRS2$Edad~DDRS2$Sexcor, data = DDRS2, col=c("lightgreen","lightblue"), horizontal=TRUE, na.rm = TRUE)
boxplot(formula=DDRS2$Edad~DDRS2$Sexcor, data = DDRS2, col=c("lightgreen","lightblue"), horizontal=TRUE, na.rm = FALSE)
A<-14
B<-80
# la suma de A y B es
(A+B)
cat("la suma de A y B es",A+B)
library()
install.packages("readr")
install.packages()
A<-14
B<-80
# la suma de A y B es
(A+B)
cat("la suma de A y B es",A+B)
library()
install.packages("readr")
install.packages()
library(readr)
read.csv("Datos_Diversos1.csv")
A<-14
B<-80
# la suma de A y B es
(A+B)
cat("la suma de A y B es",A+B)
library()
install.packages("readr")
install.packages()
library(readr)
read.csv("Datos_Diversos.csv")
data()
women
iris
trees
cars
A<-c(2,4,4,4,7,8,8,8,8,8,10,10)
A
mean(A)
median(A)
table(A)
summary(A)
cars
summary(cars$speed)
table(cars$speed)
library(readr)
library(plyr)
library(dplyr)
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
A<-14
B<-80
# la suma de A y B es
(A+B)
cat("la suma de A y B es",A+B)
library()
install.packages("readr")
install.packages()
library(readr)
read.csv("Datos_Diversos.csv")
data()
women
iris
trees
cars
A<-c(2,4,4,4,7,8,8,8,8,8,10,10)
A
mean(A)
median(A)
table(A)
summary(A)
cars
summary(cars$speed)
table(cars$speed)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
read.csv("Datos_Diversos.csv")
DD <- read_csv("Datos_Diversos.csv")
DD
glimpse(DD)
DD$Ciclo<-as.character(DD$Ciclo)
DD$Edad<-as.numeric(DD$Edad)
DD$`Peso (kg)`<-as.numeric(DD$`Peso (kg)`)
DD$`Tiempo de reacción`<- as.numeric(DD$`Tiempo de reacción`)
DD$`Talla de zapato`<-as.numeric(DD$`Talla de zapato`)
glimpse(DD)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
dim(DD)
nrow(DD)
ncol(DD)
class(DD$Apellido)
class(DD$`Estatura (cm)`)
class(DD$`Signo del zodiaco`)
str(DD) # Resumen del tipo de variable de la base de datos
summary(DD) #Resumen general de la base de datos
summary(DD$Edad)
quantile(cars$speed, 0.9)  # estoy hallando la mayor velocidad del 90% de las menores velocidades.
quantile(cars$speed, 0.9, na.rm=F)
quantile(cars$speed, 0.9, na.rm=T)
# Aquí en Cars , da lo mismo poner T o F, pues Cars no tiene datos NA y nada se va a remover
quantile(DD$Edad,0.5,T)  # 50% medido desde la izquierda: mediana = Cuartil 2.  Con TRUE se ignora los NAs.
quantile(DD$Edad,0.25,T) # 25% medido desde la izquierda: Cuartil 1.  Con TRUE se ignora los NAs.
quantile(DD$Edad,0.8,T)  # 80% medido desde la izquierda ( los mas guaguitas)
quantile(DD$Edad,0.2,T)
table(DD$Edad)
table(DD$Período, DD$Ciclo)
is.na(DD)
sum(is.na(DD))      # Cantidad de datos faltantes (NA)
sum(!is.na(DD))     # Cantidad de datos completos (no son NA)
sum(is.na(DD$Edad))  # Hallare el # de celdas vacías en EDAD
sum(is.na(DD$`Signo del zodiaco`))  # hallo el # de celdas vacías en ZODIACO
sum(is.na(DD$`Fecha de nacimiento`))
sum(!is.na(DD$Edad)) # hallo la cantidad de celdas no vacías en la columna EDAD
sum(complete.cases(DD)) #complete.cases -> casos completos
sum(!complete.cases(DD))#!complete.cases -> casos incompletos
names(DD)
DDR <- rename(DD, Estatura= `Estatura (cm)`, Peso= `Peso (kg)`, Signo = `Signo del zodiaco`, Reacción = `Tiempo de reacción`, Videojuegos = `Juega videojuegos`, Deporte = `Hace deporte`, Color = `Color favorito`, Calzado = `Talla de zapato`, Polo = `Talla de polo`)
names(DDR)
select(DDR,Edad,Ciclo,Período, Estatura)
select(DDR,Sección:Estatura)
DDRS<-select(DDR,Período:Indicaciones)
DDRS
sum(complete.cases(DDRS))
select(DDR, starts_with("S"))
select(DDR, ends_with("no"))
select(DDR, contains("tu"))
Letras<-c("a","b","c","d","e","f","g","h","i","j")
quantile(Letras,0.25,type=3)
quantile(Letras,0.5,type=3)
quantile(Letras,0.75,type=3)
quantile(Letras,probs=c(0.25,0.5,0.75,0.9), type=3)
NestadA<-c(6, 8, 8, 8,  10, 10, 10, 19, 20, 20)
NestadB<- c(9, 10, 10, 12, 13, 13, 13, 14, 14, 14 )
summary(DDR$Edad)
sd(Ncalc)
sd(Nestad)
library(readr)
library(plyr)
library(dplyr)
library(tidyr)
library(tidyverse)
A<- filter(DDR, Sección=="3")
A
mean(A$Edad)
filter(DDR,Edad <30, Estatura >=170)
unique(DDR$Signo)
unique(DDR$Carrera)
unique(DDR$Sexo)
filter(DDR, Edad<18, Signo=="tauro"|Signo=="Tauro")
filter(DDR, Edad==18|Edad==21, Signo=="tauro"|Signo=="Tauro") #Forma 1
filter(DDR, Edad %in% c(18, 21), Signo %in% c("tauro", "Tauro")) #Forma 2
unique(DDR$Polo)
filter(DDR, Estatura >= 175, Polo %in% c("L","XL","XXL","l", "xl", "Xl"))
filter(DDR, Edad==19|Edad==20|Edad==52, Peso !="NA" )
filter(DDR, !is.na(DDR$Peso))
filter(DDR, is.na(DDR$Edad) )
filter(DDR,Calzado != "NA")
unique(DDR$Período)
BD<- filter(DDR, Sección=="4", Período %in% c("2022-1", "2022.1"))
BD
m<- mean(BD$Edad)
m
s<- sd(BD$Edad)
s
CV<- (s/m)*100
CV
filter(DDR, is.na(Estatura), Edad>20)
unique(DDR$Sexo)
library(stringr)
DDRS<-DDR
DDRS
table(DDRS$Sexo)
DDRS$Sexo <- str_trim(DDRS$Sexo,side = "both")
table(DDRS$Sexo)
DDRSminus<-tolower(DDRS$Sexo)   # convierte todas las respuestas con minúsculas, de SEXO
table(DDRSminus)
DDRSmayus<-toupper(DDRS$Sexo)   # todo SEXO a mayúscula
table(DDRSmayus)
DDRS$Sexo <- str_to_lower(DDRS$Sexo,locale = "es")   # a minúscula
table(DDRS$Sexo)
DDRS$Sexo <- str_to_upper(DDRS$Sexo,locale = "es")
table(DDRS$Sexo)
unique(DDRS$Sexo)
DDRSC<- mutate(DDRS,Sexcor=case_when(Sexo == '' ~'desconocido',
Sexo == 'MM' ~ 'M',Sexo=='NB'~'desconocido',Sexo=='M'~'M',Sexo=='F'~'F', Sexo=='L'~'desconocido'))
DDRSC
table(DDRSC$Sexcor)                            # no cuenta los NA
table(DDRSC$Sexcor, useNA = "always")          # si cuenta los NA
frec<-c(2, 555, 1313, 355)   # Son las frecuencias de la columna SEXO CORREGIDO
frec
pie(frec)  # anti horario: clockwise=F
pie(frec, labels=frec)
pie(frec, labels=frec)
legend("topleft", legend = c("Desconocido", "Femenino", "Masculino", "no especifica"),
fill =  c("white", "lightblue", "mistyrose","lightgreen"))
pie(frec, labels=frec, col= c("white", "blue", "yellow", "green"))
legend("topleft", legend = c("Desconocido", "Femenino", "Masculino", "no especifica"),
fill =  c("white", "blue", "yellow","green"))
install.packages("plotrix")
library(plotrix)
pie3D(frec, labels=frec, col= c("white", "blue", "yellow", "green"))
legend("topleft", legend = c("Desconocido", "Femenino", "Masculino", "no especifica"),
fill =  c("white", "blue", "yellow","green"))
pie3D(frec, labels=frec, col= c("white", "blue", "yellow", "green"))
legend("topleft", legend = c("Desconocido", "Femenino", "Masculino", "no especifica"),
fill =  c("white", "lightblue", "mistyrose","lightgreen"))
title("Gráfico circular de la variable Sexo")
summary(DDRSC$Edad)
boxplot(DDRSC$Edad)
boxplot(DDRSC$Edad, col="blue", horizontal = TRUE)
boxplot(DDRSC$Edad, col="yellow", horizontal = TRUE , xlab ="Edad en años")
stripchart(DDRSC$Edad, method = "jitter", pch = 19, add = TRUE, col = "purple")
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(plotrix)
Fsexcor<-factor(DDRSC$Sexcor)
Fsexcor
plot(DDRSC$Edad)  # aqui la variable es cuantitativa y produce una nube de puntos.
plot(x=Fsexcor)   # aqui mi variable es cualitativa, pero como Factor
table(DDRSC$Sexcor)
plot(x = Fsexcor, main = "Gráfico de barras para la variable Sexo",
xlab = "Sexo", ylab = "Frecuencia absoluta",
col = c("white", "yellow", "royalblue"))
tabsexo<-table(DDRSC$Sexcor) # la información de resumen de sexcor, se coloca en la tabla tabsexo.
barp<- barplot( tabsexo,main="Gráfico de barras de Sexo",col=c("white", "yellow", "red"),xlab = "Sexo", ylab = "Frecuencia absoluta")
tabsexo<-table(DDRSC$Sexcor) # la información de resumen de sexcor, se coloca en una tabla y se asigna un nombre.
barp<- barplot( tabsexo,main="Gráfico de barras de Sexo",col=c("white", "yellow", "red"),xlab = "Sexo", ylab = "Frecuencia absoluta" )
text(barp, tabsexo + 0.5, labels = tabsexo)
# grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "gray")
tabsexo<-table(DDRSC$Sexcor) # la información de resumen de sexcor, se coloca en una tabla y se asigna un nombre.
barp<- barplot( tabsexo,main="Gráfico de barras de Sexo",col=c("white", "yellow", "red"),xlab = "Sexo", ylab = "Frecuencia absoluta",ylim=c(-50,1400) )
text(barp, tabsexo + 0.5, labels = tabsexo)
grid(nx = NA, ny = NULL, lwd = 1, lty = 1, col = "blue")
summary(DDRSC$Estatura)
hist(DDRSC$Estatura)
hist(DDRSC$Edad)
hist(DDRSC$Peso)
boxplot(DDRSC$Estatura, col= "green", horizontal=TRUE)
boxplot(DDRSC$Edad, col= "skyblue", horizontal=TRUE)
boxplot(DDRSC$Peso, col= "yellow", horizontal=TRUE)
Estaturasreales<-filter(DDRSC,Estatura>=100 & Estatura<=210) # considero que la minima estatura es 1m y la máxima es 2.10m
Estaturasreales
hist(Estaturasreales$Estatura)
hist(Estaturasreales$Estatura, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col ="lightblue" , main="Histograma de las Estaturas bien escritas, de alumnos UTEC",  )
hi<-hist(Estaturasreales$Estatura, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col ="lightblue" , border= "red" , main="Histograma de Estaturas bien escritas de alumnos UTEC", breaks=6 )
hi<-hist(Estaturasreales$Estatura, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col =c("blue", "white","blue","white","blue","white"), border= "black" , main="Histograma de Estaturas bien escritas de alumnos UTEC", breaks=6  )
text(hi$mids,hi$counts,labels=hi$counts, adj=c(0.5, -0.5), cex=.5)
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(tidyr)
summary(DDRSC$Estatura)
filter(DDRSC, Estatura<130|Estatura>200) # Verificando si hay personas menores a 130 o mayores a 200
DDRSEC<- mutate(DDRSC,Estcor = ifelse(Estatura < 2, 100*Estatura, Estatura))
DDRSEC
summary(DDRSEC$Estcor)
boxplot(DDRSEC$Estcor, horizontal=T)
hist(DDRSEC$Estcor)
DDRSEC<- mutate(DDRSEC,Estcor = ifelse(Estatura < 2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
DDRSEC
summary(DDRSEC$Estcor)
boxplot(DDRSEC$Estcor, horizontal = T)
hist(DDRSEC$Estcor)
Estaturasreales<-filter(DDRSEC,Estcor>=130 & Estcor<=200)
Estaturasreales
hist(Estaturasreales$Estcor)
hist(Estaturasreales$Estcor, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col ="green" , main="Histograma de las Estaturas corregidas, de alumnos UTEC",  )
hi<-hist(Estaturasreales$Estcor, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col ="green" , border= "blue" , main="Histograma de Estaturas corregidas de alumnos UTEC", breaks=6 )
hi<-hist(Estaturasreales$Estcor, xlab = "Estaturas de alumnos", ylab = "frecuencia absoluta", col =c("green"), border= "blue" , main="Histograma de Estaturas corregidas de alumnos UTEC", breaks=6  )
text(hi$mids,hi$counts,labels=hi$counts, adj=c(0.5, -0.5), cex=.5)
table(D1RSE$Ciclo)
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
table(D1RSE$Edad)
tabsexoyciclo<-table(D1RSE$Sexcor, D1RSE$Ciclo)
tabsexoyciclo
#barplot(tabsexoyciclo,main="barras apiladas",col=c("green","yellow"))
#legend(x="topright",legend=c("F","M"),fill = c("green","yellow"),title="leyenda")
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
tabsexoyciclo
barplot(tabsexoyciclo,main="barras apiladas de Sexo y Ciclo",col=c("red","green", "yellow"))
legend(x="topright",legend=c("Desconocido","Femenino","Masculino"),fill = c("red","green","yellow"),title="leyenda")
boxplot(formula=D1RSE$Edad~D1RSE$Sexcor, data=D1RSE,col="green", horizontal= T)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
filter(D1RSE$Sexcor, Sexcor="no especifica") <- "Desconocido"
library(plyr)
library(dplyr)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
filter(D1RSE$Sexcor, Sexcor="no especifica") <- NA
library(plyr)
library(dplyr)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
D1RSE$Sexcor[D1RSE$Sexcor %in% c("No especifica")] <- NA
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
tabsexoyciclo
barplot(tabsexoyciclo,main="barras apiladas de Sexo y Ciclo",col=c("red","green", "yellow"))
legend(x="topright",legend=c("Desconocido","Femenino","Masculino"),fill = c("red","green","yellow"),title="leyenda")
boxplot(formula=D1RSE$Edad~D1RSE$Sexcor, data=D1RSE,col="green", horizontal= T)
boxplot(formula=D1RSE$Edad~D1RSE$Sexcor, data=D1RSE,col="green", horizontal= T, na.rm=T)
boxplot(formula=D1RSE$Edad~D1RSE$Sexcor, data=D1RSE,col="green", horizontal= T, na.rm=F)
library(plyr)
library(dplyr)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
D1RSE$Sexcor[D1RSE$Sexcor %in% c("No especifica")] <- NA
table(D1RSE$Sexcor)
library(plyr)
library(dplyr)
D1RSE <- mutate(DDRS1, Estcor = ifelse(Estatura<2, 100*Estatura, ifelse(Estatura>250, 0.1*Estatura, Estatura)))
table(D1RSE$Ciclo)
D1RSE$Sexcor[D1RSE$Sexcor %in% c("no especifica")] <- NA
table(D1RSE$Sexcor)
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
tabsexoyciclo
barplot(tabsexoyciclo,main="barras apiladas de Sexo y Ciclo",col=c("red","green", "yellow"))
legend(x="topright",legend=c("Desconocido","Femenino","Masculino"),fill = c("red","green","yellow"),title="leyenda")
boxplot(formula=D1RSE$Edad~D1RSE$Sexcor, data=D1RSE,col="green", horizontal= T, na.rm=F)
boxplot(formula=D1RSE$Estcor~D1RSE$Sexcor, data=D1RSE,col="yellow", horizontal= T)
# Valores de Edades de "desconocido"
summary(D1RSE$Estcor[D1RSE$Sexcor=="desconocido"])
# Valores de Edades de "Mujeres"
summary(D1RSE$Estcor[D1RSE$Sexcor=="F" ])
# Valores de Edades de "Hombres"
summary(D1RSE$Estcor[D1RSE$Sexcor=="M"])
tabsexoyciclo<-table(D1RSE$Sexcor ,D1RSE$Ciclo)
tabsexoyciclo
mosaicplot(tabsexoyciclo,main="Sexo vs Ciclo" ,col=c("green","purple","lightblue", "yellow"))
